// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pedidos.Infra.Data.Common;

#nullable disable

namespace Pedidos.Infra.Data.Common.Migrations.Npgsql
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221203200700_Seeds")]
    partial class Seeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pedidos.Domain.Entities.CategoriaProduto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaProduto");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<long>("CidadeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estado");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Descricao = "Acre",
                            PaisId = 1L,
                            Uf = "AC"
                        },
                        new
                        {
                            Id = 2L,
                            Descricao = "Alagoas",
                            PaisId = 1L,
                            Uf = "AL"
                        },
                        new
                        {
                            Id = 3L,
                            Descricao = "Amapá",
                            PaisId = 1L,
                            Uf = "AP"
                        },
                        new
                        {
                            Id = 4L,
                            Descricao = "Amazonas",
                            PaisId = 1L,
                            Uf = "AM"
                        },
                        new
                        {
                            Id = 5L,
                            Descricao = "Bahia",
                            PaisId = 1L,
                            Uf = "BA"
                        },
                        new
                        {
                            Id = 6L,
                            Descricao = "Ceara",
                            PaisId = 1L,
                            Uf = "CE"
                        },
                        new
                        {
                            Id = 7L,
                            Descricao = "Distrito Federal",
                            PaisId = 1L,
                            Uf = "DF"
                        },
                        new
                        {
                            Id = 8L,
                            Descricao = "Espirito Santo",
                            PaisId = 1L,
                            Uf = "ES"
                        },
                        new
                        {
                            Id = 9L,
                            Descricao = "Goiás",
                            PaisId = 1L,
                            Uf = "GO"
                        },
                        new
                        {
                            Id = 10L,
                            Descricao = "Maranhão",
                            PaisId = 1L,
                            Uf = "MA"
                        },
                        new
                        {
                            Id = 11L,
                            Descricao = "Mato Grosso",
                            PaisId = 1L,
                            Uf = "MT"
                        },
                        new
                        {
                            Id = 12L,
                            Descricao = "Mato Grosso do Sul",
                            PaisId = 1L,
                            Uf = "MS"
                        },
                        new
                        {
                            Id = 13L,
                            Descricao = "Minas Gerais",
                            PaisId = 1L,
                            Uf = "MG"
                        },
                        new
                        {
                            Id = 14L,
                            Descricao = "Para",
                            PaisId = 1L,
                            Uf = "PA"
                        },
                        new
                        {
                            Id = 15L,
                            Descricao = "Paraíba",
                            PaisId = 1L,
                            Uf = "PB"
                        },
                        new
                        {
                            Id = 16L,
                            Descricao = "Paraná",
                            PaisId = 1L,
                            Uf = "PR"
                        },
                        new
                        {
                            Id = 17L,
                            Descricao = "Pernambuco",
                            PaisId = 1L,
                            Uf = "PE"
                        },
                        new
                        {
                            Id = 18L,
                            Descricao = "Piauí",
                            PaisId = 1L,
                            Uf = "PI"
                        },
                        new
                        {
                            Id = 19L,
                            Descricao = "Rio de Janeiro",
                            PaisId = 1L,
                            Uf = "RJ"
                        },
                        new
                        {
                            Id = 20L,
                            Descricao = "Rio Grande do Norte",
                            PaisId = 1L,
                            Uf = "RN"
                        },
                        new
                        {
                            Id = 21L,
                            Descricao = "Rio Grande do Sul",
                            PaisId = 1L,
                            Uf = "RS"
                        },
                        new
                        {
                            Id = 22L,
                            Descricao = "Rondônia",
                            PaisId = 1L,
                            Uf = "RO"
                        },
                        new
                        {
                            Id = 23L,
                            Descricao = "Roraima",
                            PaisId = 1L,
                            Uf = "RR"
                        },
                        new
                        {
                            Id = 24L,
                            Descricao = "Santa Catarina",
                            PaisId = 1L,
                            Uf = "SC"
                        },
                        new
                        {
                            Id = 25L,
                            Descricao = "São Paulo",
                            PaisId = 1L,
                            Uf = "SP"
                        },
                        new
                        {
                            Id = 26L,
                            Descricao = "Sergipe",
                            PaisId = 1L,
                            Uf = "SE"
                        },
                        new
                        {
                            Id = 27L,
                            Descricao = "Tocantins",
                            PaisId = 1L,
                            Uf = "TO"
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Imagem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Principal")
                        .HasColumnType("boolean");

                    b.Property<long?>("ProdutoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPreco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ListaPreco");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPrecoProduto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ListPrecoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ListaPrecoId")
                        .HasColumnType("bigint");

                    b.Property<double>("PercentualAcrescimoMaximo")
                        .HasColumnType("double precision");

                    b.Property<double>("PerdentualDescontoMaximo")
                        .HasColumnType("double precision");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("numeric");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ListaPrecoProduto");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPrecoVendedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ListaPrecoId")
                        .HasColumnType("bigint");

                    b.Property<long>("VendedorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecoId");

                    b.HasIndex("VendedorId");

                    b.ToTable("ListaPrecoVendedor");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Pais");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nome = "Brasil"
                        });
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NumeroPedido")
                        .HasColumnType("integer");

                    b.Property<long>("PessoaId")
                        .HasColumnType("bigint");

                    b.Property<long>("VendedorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<long>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("InscricaoFederal")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ProdutoPedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("DescontoPraticado")
                        .HasColumnType("double precision");

                    b.Property<long?>("ListaPrecoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PedidoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("numeric");

                    b.Property<long>("ProdutoId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoPedido");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Vendedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Cidade", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Estado", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Imagem", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Produto", null)
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPrecoProduto", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.ListaPreco", "ListaPreco")
                        .WithMany("ListaPrecoProdutos")
                        .HasForeignKey("ListaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedidos.Domain.Entities.Produto", "Produto")
                        .WithMany("ListaPrecoProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListaPreco");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPrecoVendedor", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.ListaPreco", "ListaPreco")
                        .WithMany()
                        .HasForeignKey("ListaPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedidos.Domain.Entities.Vendedor", "Vendedor")
                        .WithMany("ListaPrecoVendedor")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListaPreco");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pedidos.Domain.Entities.Vendedor", "Vendedor")
                        .WithMany("Pedidos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pessoa", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Produto", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.CategoriaProduto", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ProdutoPedido", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.ListaPreco", "ListaPreco")
                        .WithMany()
                        .HasForeignKey("ListaPrecoId");

                    b.HasOne("Pedidos.Domain.Entities.Pedido", null)
                        .WithMany("ProdutoPedido")
                        .HasForeignKey("PedidoId");

                    b.HasOne("Pedidos.Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutosPedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListaPreco");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Vendedor", b =>
                {
                    b.HasOne("Pedidos.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.ListaPreco", b =>
                {
                    b.Navigation("ListaPrecoProdutos");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("ProdutoPedido");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Imagens");

                    b.Navigation("ListaPrecoProduto");

                    b.Navigation("ProdutosPedidos");
                });

            modelBuilder.Entity("Pedidos.Domain.Entities.Vendedor", b =>
                {
                    b.Navigation("ListaPrecoVendedor");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
